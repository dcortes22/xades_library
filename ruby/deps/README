XMLSIG FOR DYNAMIC LANGUAGES - GENERAL README

DESCRIPTION

XMLSig is a C++ wrapper around the xmlsec library, providing a simple
object oriented interface for dynamic languages.  Its main objectives
are:

1. To be a fully compliant XML Signature implementation.

See http://www.w3.org/TR/xmldsig-core/

2. To have an API resembling Apache TSIK.

See http://incubator.apache.org/tsik/

Secondary objectives include:

1. Make it easy to bind to many dynamic languages.  

This can be seen in the minimal amount of type-mapping needed to bind
to XMLSig.  Only XMLSig objects and common C/C++ types are exposed.
This gives the XMLSig interface a lowest-common-denominator feel, and
it is expected that language enthusiasts will create wrapper modules
that have a more language-specific feel.

2. Play nicely with native language objects as much as possible.

One goal of XMLSig is to provide language-specific methods so that
developers can still use their language's standard libraries with
XMLSig.  For example, XMLSig encapsulates XML processing, but
different languages have their own favorite XML libraries, so XMLSig
should make it possible for developers to use their language's
standard XML API.


LICENSE

(C) Copyright 2006 VeriSign, Inc.
Developed by Sxip Identity

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


INSTALLATION

See the prerequisites section for information on installing xmlsig
dependencies.

There are two possible source distributions to build from.  The first
includes source for all supported scripting languages, and is run
using makefiles.  The second is a language specific source
distribution built using the standard setup method for the language;
"setup.py" for Python, "extconf.rb" for Ruby, "Makefile.PL" for Perl.
The language specific source contains the generated wrapper code, so
Swig is not required to build from this source.

If there is no makefile in the same directory as this README file, you
are working from the language specific source distribution.


General Build Instructions

It is important to ensure that the prerequisites noted here are met
before building.  This can be problematic on some platforms depending
on the package management system in place.  In general, ensure that
the correct library and language versions are installed, and that they
are in the system's execution path prior to attempting to build.  Note
that library versions noted here are "as tested"; newer versions or
alternate binary distributions may work.


Multi Language Source Distribution

Run "make" from the top level directory (GNU make is
required). Targets include:

sdist:
  Build language specific source distribution files

test:
  Run tests for all language modules

doc:
  Generate documentation files 

clean:
  Remove intermediate files from source tree

reallyclean:
  Remove non-distribution and intermediate files from source tree

Note that the Windows platform is not currently supported for building
in this manner; use the language specific source distributions
instead.


Language Specific Source Distribution

See the README.<lang> file included with this package.


API DOCUMENTATION

API documentation (generated by Doxygen) is available in the doc/api
folder.


TESTING AND VALIDATION

Each language specific module contains unit tests to verify that the
language binding interface works.  The Python language module contains
additional tests to check interoperability and module functionality.


W3C Interop Testing

The xmlsig module is tested against the merlin-xmldsig-twenty-three
interop suite available at
  http://www.w3.org/Signature/2001/04/05-xmldsig-interop.html.

Each test document is verified, re-signed and re-verified.


TSIK Interop Testing

TSIK unit tests were ported to the Python unit test suite.  Currently
the TSIK org.apache.tsik.xmlsig.test.XmlSigTest,
org.apache.tsik.xmlsig.test.XmlSigTestExcC14n and
org.apache.tsik.xmlsig.test.XmlSigTestDigsig test cases are
implemented.


PREREQUISITES

The following language versions are required:
- PHP 5.1.x
- Perl 5.8.x  
- Python 2.4.x  
- Ruby 1.8.x

The xmlsig module depends upon the xmlsec1 and openssl libraries,
which have been ported to all platforms listed below.  Swig (minimum
version 1.3.29) is required to regenerate the language interface
wrappers, but is not necessary if building from the language specific
source packages.


Linux (Red Hat Fedora Core 4)

Tested with the following language versions:
- PHP 5.1.4
- Perl 5.8.6
- Python 2.4.3  
- Ruby 1.8.4

The standard g++ toolchain, including make, must be installed.  In
addition, the following Red Hat Linux packages must be installed
(as tested version in brackets):

- xmlsec1-devel	(1.2.7-4)
- xmlsec1-openssl-devel	(1.2.7-4)
- openssl-devel (0.9.7f-7.10)
- libxml2-devel (2.6.20-1.FC4)
- libxslt-devel (1.1.14-2)

Run-time dependencies may be satisfied with the following packages
and their dependencies:

- xmlsec1
- xmlsec1-openssl
- openssl
- libxml2
- libxslt

The simplest way to install Red Hat prerequisites is to use the "yum"
utility; i.e. "yum install xmlsec1-devel".


Windows XP (SP2)

Visual Studio 2003 is required.

Tested with the following language versions:
- PHP 5.1.4
- Perl 5.8.8
- Python 2.4.3  
- Ruby 1.8.4

From http://www.zlatkovic.com/pub/libxml/ download and unzip the
following files:

- iconv-1.9.2.win32.zip
- libxml2-2.6.24.win32.zip
- libxmlsec-1.2.9-2.win32.zip
- libxslt-1.1.16.win32.zip
- openssl-0.9.8a.win32.zip
- zlib-1.2.3.win32.zip

The Python xmlsig language binding works with the libxml2 binding
which may be installed separately.

Alternatively, download the xmlsig-x.y.z-win32-deps.zip file from the
same place you received this file.  It contains all of the above
dependencies in a single package.

The include\ and lib\ directories in the binary library archives
listed above should be installed in the parent of the source
distribution base directory:

 include\
 lib\
 xmlsig-x.y.z-perl\
 xmlsig-x.y.z-php\
 xmlsig-x.y.z-python\
 xmlsig-x.y.z-ruby\

The bin\ directory should be installed and the %PATH% environment
variable updated to include it.

If any linker or run-time errors occur check that the dependencies are
installed correctly, and the PATH points to them.  Eliminate
duplicates of the dependent libraries, especially mismatched versions.


FreeBSD (6.0)

Tested with the following language versions:
- PHP 5.1.4
- Perl 5.8.8
- Python 2.4.3  
- Ruby 1.8.4

The following packages should be installed from the ports tree (as
tested version in brackets):

- converters/libiconv (1.9.2_1)
- textproc/libxml2 (2.6.24)
- textproc/libxslt (1.1.16_1)
- security/xmlsec1 (1.2.9)


OS X (10.4)

Tested with the following language versions:
- PHP 5.1.4
- Perl 5.8.6
- Python 2.4.1
- Ruby 1.8.1

The "fink" package management tool (http://fink.sourceforge.net/) has
been used to install OS X library dependencies.  "darwin-ports" may
also be used, but this is untested.

- libxml2 (2.6.22-2)
- libxml2-bin (2.6.22-2)
- libxml2-shlibs (2.6.22-2)
- libxslt (1.1.15-3)
- libxslt-bin (1.1.15-3)
- libxslt-shlibs (1.1.15-3)
- libiconv (1.9.1-11)
- libiconv-bin (1.9.1-11)
- libiconv-dev (1.9.1-11)
- openssl097 (0.9.7d-1)
- openssl097-dev (0.9.7d-1)
- openssl097-shlibs (0.9.7d-1)

The xmlsec1 library should be installed manually; download the tarball
from:
  http://www.aleksey.com/xmlsec/download/xmlsec1-1.2.9.tar.gz

Before building the source, apply the patch in the xmlsig scripts/
directory.  To build, run the xmlsec1-autogen.sh script (from the same
directory) in the base xmlsec1 directory.  Building on OS X also
requires the automake and pkgconfig tools from fink as well as the
Apple XCode package, install as follows:

  sudo apt-get install autoconf2.5 automake1.9 libtool14 pkgconfig 


TODO

Language-specific todos can be found in README.<lang>


KNOWN ISSUES

The Signature element defines the default namespace for itself and its
children, which may cause problems in certain situation.  A patch was
submitted to the xmlsec maintainer that will be in the release
following 1.2.10, and this library will be updated at that time.  In
the meantime an easy workaround is to specify a namespace for any XML
elements that are enclosed in the Object element of enveloping
signatures.
